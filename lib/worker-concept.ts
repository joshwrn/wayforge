// factorial.worker.ts
// code the developer writes

export default async function factorial(n: number): Promise<number> {
	if (n < 0) {
		throw new Error(`factorial is not defined for negative numbers`)
	}
	if (n === 0) {
		return 1
	}
	return n * (await factorial(n - 1))
}

// factorial.worker.gen.ts
// code generated by the worker builder

// import stuff from "./factorial.worker.ts"
const stuff = factorial

const wrappedStuff: typeof stuff = async (...args) => {
  const { default: worker } = await import(`./factorial.worker.js`)
  

}

export default wrappedFactorial